--------------------------------------------------------------------------------
Profile data file 'callgrind.out' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 5866554567
Trigger: Program termination
Profiled target:  ./cub3d maps/test.cub (PID 364133, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                      
--------------------------------------------------------------------------------
53,514,528,247 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                       file:function
--------------------------------------------------------------------------------
22,459,082,880 (41.97%)  src/drawing/draw_basics.c:draw_sprite_sheet [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
 7,594,352,014 (14.19%)  src/rendering/texture.c:manage_texture [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
 6,577,774,578 (12.29%)  src/drawing/draw_basics.c:draw_pixel [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
 5,388,057,616 (10.07%)  ???:huffman_decode [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
 2,831,116,398 ( 5.29%)  src/rendering/render_draw_ray.c:render_draw_ray [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
 2,464,059,545 ( 4.60%)  src/rendering/render.c:render [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
 1,268,854,135 ( 2.37%)  ???:bs_peek_bits [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   871,036,596 ( 1.63%)  src/rendering/texture.c:render_horizontal_texture [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   661,098,657 ( 1.24%)  ???:cp_buffer_add [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   574,696,878 ( 1.07%)  ???:unpack_scanline_to_pixels [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   440,298,422 ( 0.82%)  ???:ft_memcpy [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   410,977,113 ( 0.77%)  ???:png_filter_paeth [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   333,647,014 ( 0.62%)  ???:inflate_copy_reference [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   321,104,241 ( 0.60%)  src/rendering/raycast_dda.c:render_ray [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   203,031,081 ( 0.38%)  ./math/../sysdeps/ieee754/dbl-64/s_sin.c:__cos_fma [/usr/lib/x86_64-linux-gnu/libm.so.6]
   192,183,127 ( 0.36%)  ???:bs_read_bits [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   165,272,600 ( 0.31%)  ???:lz77_window_push [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
   122,009,792 ( 0.23%)  src/minimap/minimap_drawing.c:draw_tile [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
    92,392,646 ( 0.17%)  ???:inflate_block_huffman [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]
    74,447,087 ( 0.14%)  ???:bs_consume_bits [/home/vdurand/Documents/PROJECTS/cub3d/cub3d]

--------------------------------------------------------------------------------
-- Auto-annotated source: src/rendering/raycast_dda.c
--------------------------------------------------------------------------------
Ir                  

-- line 17 ----------------------------------------
         .           static inline void	raycast_launch(t_raycast_context *ctx);
         .           static inline bool	check_tile(t_raycast_hit *hit, \
         .           		t_raycast_context *ctx);
         .           static inline void	raycast_set_dist(t_raycast_hit *hit, \
         .           		t_raycast_context *ctx);
         .           
         .           void	render_ray(float base_angle, int column,
         .           		t_ray2 *ray, t_render_context *render_ctx)
 1,061,760 ( 0.00%)  {
         .           	t_raycast_context	ctx;
         .           
   303,360 ( 0.00%)  	ctx.actual.original_angle = base_angle;
   303,360 ( 0.00%)  	ctx.actual.o_ray = *ray;
   151,680 ( 0.00%)  	ctx.column = column;
   151,680 ( 0.00%)  	ctx.render_ctx = render_ctx;
   303,360 ( 0.00%)  	ctx.ray = ray;
   303,360 ( 0.00%)  	ctx.tilemap = render_ctx->tilemap;
   606,720 ( 0.00%)  	ctx.step.x = sign(ray->dir_normal.x);
 1,365,120 ( 0.00%)  => ???:sign (151,680x)
   758,400 ( 0.00%)  	ctx.step.y = sign(ray->dir_normal.y);
 1,365,120 ( 0.00%)  => ???:sign (151,680x)
         .           	ctx.last_ceil = 200;
   151,680 ( 0.00%)  	ctx.last_floor = -201;
   151,680 ( 0.00%)  	ctx.actual.orientation = 0;
         .           	raycast_init(&ctx);
         .           	if (check_tile(&ctx.actual, &ctx) != 0)
         .           	{
         .           		raycast_set_dist(&ctx.actual, &ctx);
   455,040 ( 0.00%)  		render_draw_ray(&ctx.actual, &ctx, ctx.render_ctx);
186,160,933 ( 0.35%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/rendering/render_draw_ray.c:render_draw_ray (151,680x)
         .           	}
         .           	raycast_launch(&ctx);
 1,213,440 ( 0.00%)  }
         .           
         .           static inline void	raycast_init(t_raycast_context *ctx)
         .           {
         .           	t_ray2	*ray;
         .           
         .           	ray = ctx->ray;
   606,720 ( 0.00%)  	ctx->actual_tile.x = floorf(ray->origin.x);
   606,720 ( 0.00%)  	ctx->actual_tile.y = floorf(ray->origin.y);
   758,400 ( 0.00%)  	if (float_equal(ray->dir_normal.x, 0))
   910,080 ( 0.00%)  => ???:float_equal (151,680x)
   151,680 ( 0.00%)  		ctx->delta_dist.x = INFINITY;
         .           	else
   455,040 ( 0.00%)  		ctx->delta_dist.x = fabs(1 / ray->dir_normal.x);
   910,080 ( 0.00%)  	if (float_equal(ray->dir_normal.y, 0))
   910,080 ( 0.00%)  => ???:float_equal (151,680x)
   151,680 ( 0.00%)  		ctx->delta_dist.y = INFINITY;
         .           	else
   455,028 ( 0.00%)  		ctx->delta_dist.y = fabs(1 / ray->dir_normal.y);
   455,040 ( 0.00%)  	if (ray->dir_normal.x < 0.0)
   303,360 ( 0.00%)  		ctx->step_dist.x = 
    10,665 ( 0.00%)  			(ray->origin.x - ctx->actual_tile.x) * ctx->delta_dist.x;
         .           	else
         .           		ctx->step_dist.x = 
 1,345,923 ( 0.00%)  			(ctx->actual_tile.x + 1.0 - ray->origin.x) *  ctx->delta_dist.x;
   455,040 ( 0.00%)  	if (ray->dir_normal.y < 0.0)
   151,680 ( 0.00%)  		ctx->step_dist.y = 
   144,070 ( 0.00%)  			(ray->origin.y - ctx->actual_tile.y) * ctx->delta_dist.y;
         .           	else
         .           		ctx->step_dist.y = 
   982,928 ( 0.00%)  			(ctx->actual_tile.y + 1.0 - ray->origin.y) *  ctx->delta_dist.y;
         .           }
         .           
         .           static inline void	raycast_launch(t_raycast_context *ctx)
         .           {
         .           	char	is_wall;
         .           
39,797,008 ( 0.07%)  	while (fminf(ctx->step_dist.x, ctx->step_dist.y) < RENDER_DISTANCE)
         .           	{
 9,607,972 ( 0.02%)  		if (ctx->step_dist.x < ctx->step_dist.y)
         .           		{
 5,681,150 ( 0.01%)  			ctx->step_dist.x += ctx->delta_dist.x;
 8,521,725 ( 0.02%)  			ctx->actual_tile.x += ctx->step.x;
 5,681,150 ( 0.01%)  			ctx->actual.orientation = 0;
         .           		}
         .           		else
         .           		{
 3,926,822 ( 0.01%)  			ctx->step_dist.y += ctx->delta_dist.y;
 5,890,233 ( 0.01%)  			ctx->actual_tile.y += ctx->step.y;
 1,963,411 ( 0.00%)  			ctx->actual.orientation = 1;
         .           		}
         .           		is_wall = check_tile(&ctx->actual, ctx);
         .           		if (is_wall != 0)
         .           		{
         .           			raycast_set_dist(&ctx->actual, ctx);
16,122,960 ( 0.03%)  			render_draw_ray(&ctx->actual, ctx, ctx->render_ctx);
13,446,814,875 (25.13%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/rendering/render_draw_ray.c:render_draw_ray (4,030,740x)
         .           		}
         .           	}
         .           }
         .           
         .           static inline bool	check_tile(t_raycast_hit *hit,
         .           		t_raycast_context *ctx)
         .           {
         .           	t_tile	*tile;
         .           	int		tile_x;
         .           	int		tile_y;
         .           
 1,963,411 ( 0.00%)  	tile_x = ctx->actual_tile.x;
 2,840,575 ( 0.01%)  	tile_y = ctx->actual_tile.y;
39,797,008 ( 0.07%)  	if (!tilemap_is_tile_valid(tile_x, tile_y, ctx->tilemap))
24,778,330 ( 0.05%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/tilemaps/tilemap_basics.c:tilemap_is_tile_valid (4,955,666x)
         .           		return (0);
20,760,420 ( 0.04%)  	tile = &ctx->tilemap->tiles[tile_y][tile_x];
 4,182,420 ( 0.01%)  	hit->tile_x = tile_x;
 4,182,420 ( 0.01%)  	hit->tile_y = tile_y;
12,547,260 ( 0.02%)  	hit->tile_info = &tile->info;
 4,182,420 ( 0.01%)  	hit->tile = tile;
 4,182,420 ( 0.01%)  	hit->draw_walls = false;
30,804,438 ( 0.06%)  	if (ctx->last_ceil != hit->tile->ceiling || ctx->last_floor != hit->tile->floor)
 1,861,907 ( 0.00%)  		hit->draw_walls = true;
 4,182,420 ( 0.01%)  	ctx->last_ceil = hit->tile->ceiling;
 7,906,234 ( 0.01%)  	ctx->last_floor = hit->tile->floor;
         .           	return (1);
         .           }
         .           
         .           static inline void	raycast_set_dist(t_raycast_hit *hit,
         .           		t_raycast_context *ctx)
         .           {
 8,061,480 ( 0.02%)  	if (hit->orientation == 0)
14,441,008 ( 0.03%)  		hit->dist = (ctx->actual_tile.x - ctx->ray->origin.x \
17,687,089 ( 0.03%)  			+ (1 - ctx->step.x) * 0.5) / ctx->ray->dir_normal.x;
         .           	else
 6,622,772 ( 0.01%)  		hit->dist = (ctx->actual_tile.y - ctx->ray->origin.y \
 9,934,158 ( 0.02%)  			+ (1 - ctx->step.y) * 0.5) / ctx->ray->dir_normal.y;
         .           }

13,912,376 ( 0.03%)  <counts for unidentified lines in src/rendering/raycast_dda.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/rendering/render.c
--------------------------------------------------------------------------------
Ir                   

-- line 15 ----------------------------------------
          .           #include "cub3d_rendering.h"
          .           
          .           static inline void	render_rays(int start, int end, t_render_context *render);
          .           static void		render_init(int width, int height, \
          .           	t_render_context *context, t_game *game);
          .           static inline void	render_fog(t_render_context *render);
          .           
          .           void	render(t_game *game)
        632 ( 0.00%)  {
          .           	t_render_context	context;
          .           
        158 ( 0.00%)  	render_init(game->w_width, game->w_height, &context, game);
          .           	render_rays(0, context.render_width, &context);
          .           	render_fog(&context);
          .           	//render_sky(&context);
        158 ( 0.00%)  	draw_minimap(game);
316,773,783 ( 0.59%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/minimap/minimap_logic.c:draw_minimap (79x)
        158 ( 0.00%)  	manage_npcs(game);
     23,779 ( 0.00%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/rendering/npc/manage_npc.c:manage_npcs (79x)
        395 ( 0.00%)  	if (key_check(KEY_TAB, game))
        316 ( 0.00%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/keys/keys.c:key_check (79x)
          .           		draw_full_map(game);
        632 ( 0.00%)  }
          .           static void	render_init(int width, int height,
          .           		t_render_context *context, t_game *game)
          .           {
        158 ( 0.00%)  	context->z_buffer = game->z_buffer;
        395 ( 0.00%)  	ft_memset(context->z_buffer, UINT8_MAX, width * height);
 14,081,513 ( 0.03%)  => ???:ft_memset (79x)
         79 ( 0.00%)  	context->game = game;
        158 ( 0.00%)  	context->textures = game->textures;
        158 ( 0.00%)  	context->tilemap = game->tilemap;
        158 ( 0.00%)  	context->frame = game->frame;
        158 ( 0.00%)  	context->player = &game->player;
        158 ( 0.00%)  	context->position = vec3_to_vec2(game->player.position);
        237 ( 0.00%)  	context->direction = game->player.yaw_rad;
         79 ( 0.00%)  	context->render_height = height;
         79 ( 0.00%)  	context->render_width = width;
        158 ( 0.00%)  	context->eye_height = game->player.position.z;
        474 ( 0.00%)  	context->fov = deg_to_rad(game->player.fov_deg);
        158 ( 0.00%)  => ???:deg_to_rad (79x)
         79 ( 0.00%)  	context->fov_x = context->fov;
        553 ( 0.00%)  	context->fov_y = deg_to_rad(game->player.fov_deg - 15);
        158 ( 0.00%)  => ???:deg_to_rad (79x)
        158 ( 0.00%)  	context->halfw = game->w_halfwidth;
          .           	context->halfh = game->w_halfheight;
        636 ( 0.00%)  	context->proj_dist_x = context->halfw / tanf(context->fov_x * .5f);
      7,110 ( 0.00%)  => ./math/../sysdeps/ieee754/flt-32/s_tanf.c:tanf (79x)
        733 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (1x)
        632 ( 0.00%)  	context->proj_dist_y = context->halfh / tanf(context->fov_y * .5f);
      4,898 ( 0.00%)  => ./math/../sysdeps/ieee754/flt-32/s_tanf.c:tanf (79x)
        237 ( 0.00%)  	context->halfh = game->w_halfheight + game->player.pitch_offset;
        316 ( 0.00%)  	context->halfh = clamp(context->halfh, 0, game->w_height);
        474 ( 0.00%)  => ???:clamp (79x)
          .           }
          .           
          .           static inline void	render_rays(int start, int end, t_render_context *render)
          .           {
          .           	t_ray2			ray;
          .           	int				x;
          .           	float			camera_x;
          .           	float			ray_angle;
          .           
          .           	x = start;
    304,071 ( 0.00%)  	while (x < end)
          .           	{
  1,061,681 ( 0.00%)  		camera_x = 2.0 * x / (float)render->render_width - 1.0;
  2,274,971 ( 0.00%)  		ray_angle = render->direction + atan(camera_x * tan(render->fov / 2));
 10,465,920 ( 0.02%)  => ./math/../sysdeps/ieee754/dbl-64/s_tan.c:__tan_fma (151,680x)
  8,847,131 ( 0.02%)  => ./math/../sysdeps/ieee754/dbl-64/s_atan.c:__atan_fma (151,680x)
      1,512 ( 0.00%)  => ./elf/../sysdeps/x86_64/dl-trampoline.h:_dl_runtime_resolve_xsave (2x)
    758,400 ( 0.00%)  		ray = ray2_from_angle(render->position, ray_angle);
 10,859,606 ( 0.02%)  => ???:ray2_from_angle (151,680x)
    606,720 ( 0.00%)  		render_ray(ray_angle, x, &ray, render);
13,983,408,779 (26.13%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/rendering/raycast_dda.c:render_ray (151,680x)
          .           		x++;
          .           	}
          .           }
          .           
          .           static inline void	render_fog(t_render_context *render)
          .           {
          .           	uint16_t	fog;
          .           	uint8_t		*zbuffer;
          .           	int			x;
          .           	int			y;
          .           
          .           	y = 0;
          .           	zbuffer = render->z_buffer;
    341,675 ( 0.00%)  	while (y < render->render_height)
          .           	{
          .           		x = 0;
491,613,840 ( 0.92%)  		while (x < render->render_width)
          .           		{
819,072,000 ( 1.53%)  			fog = zbuffer[x + y * render->render_width] << 3;
327,628,800 ( 0.61%)  			if (fog > 255)
          .           				fog = 255;
655,257,600 ( 1.22%)  			draw_pixel((t_rgba8){fog, 0, 0, 0}, x, y, render->frame);
4,454,339,060 ( 8.32%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/drawing/draw_basics.c:draw_pixel (163,814,400x)
163,814,400 ( 0.31%)  			x++;
          .           		}
     85,320 ( 0.00%)  		y++;
          .           	}
          .           }

  1,232,874 ( 0.00%)  <counts for unidentified lines in src/rendering/render.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/rendering/render_draw_ray.c
--------------------------------------------------------------------------------
Ir                   

-- line 15 ----------------------------------------
          .           
          .           static inline void	draw_top_faces(t_raycast_hit *hit, int y,
          .           		t_raycast_context *ctx, t_render_context *r_ctx)
          .           {
          .           	float				real_dist;
          .           	int					buffer_idx;
          .           	float				inv_cos;
          .           
 17,510,320 ( 0.03%)  	inv_cos = (1.0f / cos(hit->original_angle - r_ctx->direction)) * r_ctx->proj_dist_y + 0.005;
238,046,908 ( 0.44%)  => ./math/../sysdeps/ieee754/dbl-64/s_sin.c:__cos_fma (3,502,064x)
          .           	float test = (r_ctx->eye_height - hit->tile->ceiling);
  7,004,128 ( 0.01%)  	if (ctx->actual.dist <= 0.01)
    309,314 ( 0.00%)  		y = r_ctx->render_height - 1;
295,881,891 ( 0.55%)  	while (y != r_ctx->halfh && y > 0)
          .           	{
250,678,570 ( 0.47%)  		real_dist = (test / (y - r_ctx->halfh)) * inv_cos ;
150,407,142 ( 0.28%)  		hit->pos.x = hit->o_ray.origin.x + hit->o_ray.dir_normal.x * real_dist;
150,407,142 ( 0.28%)  		hit->pos.y = hit->o_ray.origin.y + hit->o_ray.dir_normal.y * real_dist;
294,933,700 ( 0.55%)  		if (floor(hit->pos.x) != hit->tile_x
288,904,854 ( 0.54%)  			|| floor(hit->pos.y) != hit->tile_y)
          .           			break ;
186,548,064 ( 0.35%)  		buffer_idx = y * r_ctx->render_width + ctx->column;
279,822,096 ( 0.52%)  		if (real_dist < r_ctx-> z_buffer[buffer_idx])
          .           		{
120,977,305 ( 0.23%)  			render_horizontal_texture((t_ivec2){ctx->column, y},
1,330,750,355 ( 2.49%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/rendering/texture.c:render_horizontal_texture (24,195,461x)
 48,390,922 ( 0.09%)  				hit->pos, r_ctx, hit->tile_info->texture_topbot);
 72,586,383 ( 0.14%)  			r_ctx->z_buffer[buffer_idx] = real_dist;
          .           		}
          .           		y--;
          .           	}
          .           }
          .           
          .           static inline void	draw_bot_faces(t_raycast_hit *h, int y,
          .           		t_raycast_context *ctx, t_render_context *r_ctx)
          .           {
-- line 48 ----------------------------------------
-- line 71 ----------------------------------------
          .           			r_ctx->z_buffer[buffer_idx] = real_dist;
          .           		}
          .           		y++;
          .           	}
          .           }
          .           
          .           static void	set_texture_orientation(t_raycast_hit *result)
          .           {
 12,547,260 ( 0.02%)  	if (result->tile_info->type != TILE_WALL)
          .           		return ;
  9,877,017 ( 0.02%)  	if (result->orientation == 0 && result->o_ray.dir_normal.x < 0)
        736 ( 0.00%)  		result->tile_info->texture = TEXTURE_WEST;
  1,685,276 ( 0.00%)  	else if (result->orientation == 0 && result->o_ray.dir_normal.x > 0)
  1,685,276 ( 0.00%)  		result->tile_info->texture = TEXTURE_EAST;
  3,053,284 ( 0.01%)  	else if (result->orientation == 1 && result->o_ray.dir_normal.y < 0)
     55,658 ( 0.00%)  		result->tile_info->texture = TEXTURE_NORTH;
  1,470,984 ( 0.00%)  	else if (result->orientation == 1 && result->o_ray.dir_normal.y > 0)
    735,492 ( 0.00%)  		result->tile_info->texture = TEXTURE_SOUTH;
          .           }
          .           
          .           static void	init_texture_ctx(t_vertical_tex *tex_ctx, t_raycast_hit *hit,
          .           	t_render_context *render, float dist)
          .           {
          .           	float				dist_inv;
          .           	float				y_floor;
          .           	float				y_ceiling;
          .           
  4,182,420 ( 0.01%)  	dist_inv = 1 / dist;
 12,547,260 ( 0.02%)  	y_floor = ((hit->tile->floor - render->eye_height) \
  4,182,420 ( 0.01%)  		* dist_inv) * render->proj_dist_y;
  4,182,420 ( 0.01%)  	y_ceiling = ((hit->tile->ceiling - render->eye_height) \
          .           		* dist_inv) * render->proj_dist_y;
 20,912,100 ( 0.04%)  	tex_ctx->wall_height = render->render_height * dist_inv;
 54,371,460 ( 0.10%)  	tex_ctx->wall_start = clamp(-y_ceiling + render->halfh, \
 24,602,988 ( 0.05%)  => ???:clamp (4,182,420x)
  4,182,420 ( 0.01%)  		0, render->render_height - 1);
 20,912,100 ( 0.04%)  	tex_ctx->wall_start_actual = -y_ceiling + render->halfh;
 41,824,200 ( 0.08%)  	tex_ctx->wall_end = clamp(-y_floor + render->halfh,
 24,798,334 ( 0.05%)  => ???:clamp (4,182,420x)
  8,364,840 ( 0.02%)  		0, render->render_height - 1);
 16,729,680 ( 0.03%)  	tex_ctx->wall_end_actual = -y_floor + render->halfh;
          .           }
          .           
          .           void	render_draw_ray(t_raycast_hit *hit, t_raycast_context *ctx,
          .           			t_render_context *render)
 41,824,200 ( 0.08%)  {
          .           	float			corrected_dist;
          .           	t_vertical_tex	tex_ctx;
          .           
 12,547,260 ( 0.02%)  	corrected_dist = hit->dist
 25,094,520 ( 0.05%)  		* cosf(hit->original_angle - render->direction);
 87,810,124 ( 0.16%)  => ./math/../sysdeps/ieee754/flt-32/s_cosf.c:__cosf_fma (4,182,420x)
          .           	set_texture_orientation(hit);
 16,729,680 ( 0.03%)  	init_texture_ctx(&tex_ctx, hit, render, corrected_dist);
 16,729,680 ( 0.03%)  	if (hit->tile->ceiling < render->eye_height)
          .           		draw_top_faces(hit, tex_ctx.wall_start, ctx, render);
  2,041,068 ( 0.00%)  	else if (hit->tile->floor > render->eye_height)
          .           		draw_bot_faces(hit, tex_ctx.wall_end + 1, ctx, render);
  8,364,840 ( 0.02%)  	if (hit->draw_walls)
          .           	{
  8,054,348 ( 0.02%)  		hit->pos.x = hit->o_ray.origin.x 
 10,067,935 ( 0.02%)  			+ hit->o_ray.dir_normal.x * hit->dist;
 10,067,935 ( 0.02%)  		hit->pos.y = hit->o_ray.origin.y 
  8,054,348 ( 0.02%)  			+ hit->o_ray.dir_normal.y * hit->dist;
  8,054,348 ( 0.02%)  		manage_texture(hit, ctx, render, &tex_ctx);
9,095,850,701 (17.00%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/rendering/texture.c:manage_texture (2,013,587x)
          .           	}
 33,459,360 ( 0.06%)  }

242,162,742 ( 0.45%)  <counts for unidentified lines in src/rendering/render_draw_ray.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/minimap/minimap_drawing.c
--------------------------------------------------------------------------------
Ir                  

-- line 8 ----------------------------------------
         .           /*   Created: 2025/06/11 10:49:50 by halnuma           #+#    #+#             */
         .           /*   Updated: 2025/07/25 00:55:02 by vdurand          ###   ########.fr       */
         .           /*                                                                            */
         .           /* ************************************************************************** */
         .           
         .           #include "cub3d.h"
         .           
         .           void	draw_tile(t_tile_context *tile, t_png_pixel8 color, int mid_off)
   164,320 ( 0.00%)  {
         .           	int	i;
         .           	int	j;
         .           	int	x;
         .           	int	y;
         .           
         .           	i = 0;
   837,084 ( 0.00%)  	while (i < MMAP_TILE_SIZE - mid_off)
         .           	{
         .           		j = 0;
15,592,704 ( 0.03%)  		while (j < MMAP_TILE_SIZE - mid_off)
         .           		{
20,790,272 ( 0.04%)  			x = (tile->pos_x * MMAP_TILE_SIZE + i - tile->off_x \
14,150,208 ( 0.03%)  				+ MINIMAP_X_START + MINIMAP_BORDER) + (mid_off / 2);
         .           			y = (tile->pos_y * MMAP_TILE_SIZE + j - tile->off_y \
         .           				+ MINIMAP_Y_START + MINIMAP_BORDER) + (mid_off / 2);
40,331,264 ( 0.08%)  			if (x >= MINIMAP_X_START + MINIMAP_BORDER && \
         .           				x < MINIMAP_X_START + MINIMAP_SIZE && \
         .           				y >= MINIMAP_Y_START + MINIMAP_BORDER && \
         .           				y < MINIMAP_Y_START + MINIMAP_SIZE)
18,866,944 ( 0.04%)  				draw_pixel(color, x, y, tile->game->frame);
150,935,552 ( 0.28%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/drawing/draw_basics.c:draw_pixel (4,716,736x)
         .           			j++;
         .           		}
   326,112 ( 0.00%)  		i++;
         .           	}
   164,320 ( 0.00%)  }
         .           
         .           void	draw_border(t_game *game)
       632 ( 0.00%)  {
         .           	int				i;
         .           	int				j;
         .           	t_png_pixel8	color;
         .           
         .           	color = rgba8(25, 255, 25, 200);
         .           	i = 0;
    39,342 ( 0.00%)  	while (i < MINIMAP_SIZE)
         .           	{
         .           		j = 0;
14,714,619 ( 0.03%)  		while (j < MINIMAP_SIZE)
         .           		{
14,163,120 ( 0.03%)  			if (j < MINIMAP_BORDER || \
         .           				j > MINIMAP_SIZE - MINIMAP_BORDER || \
         .           				i < MINIMAP_BORDER || \
         .           				i > MINIMAP_SIZE - MINIMAP_BORDER)
         .           			{
 1,390,716 ( 0.00%)  				draw_pixel(color, i + MINIMAP_X_START,
11,125,728 ( 0.02%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/drawing/draw_basics.c:draw_pixel (347,679x)
   347,679 ( 0.00%)  					j + MINIMAP_Y_START, game->frame);
         .           			}
         .           			j++;
         .           		}
    19,671 ( 0.00%)  		i++;
         .           	}
       474 ( 0.00%)  }
         .           
         .           void	draw_player(t_game *game)
       474 ( 0.00%)  {
         .           	int	i;
         .           	int	j;
         .           
         .           	i = 0;
     1,896 ( 0.00%)  	while (i < MINIMAP_P_SIZE)
         .           	{
         .           		j = 0;
         .           		while (j < MINIMAP_P_SIZE)
         .           		{
    20,224 ( 0.00%)  			draw_pixel(
   161,792 ( 0.00%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/drawing/draw_basics.c:draw_pixel (5,056x)
         .           				rgba8(255, 0, 10, 200),
         .           				((7 * MMAP_TILE_SIZE) + i + MINIMAP_X_START \
         .           				+ MINIMAP_BORDER - (MINIMAP_P_SIZE / 2)),
         .           				((7 * MMAP_TILE_SIZE) + j + MINIMAP_Y_START \
         .           				+ MINIMAP_BORDER - (MINIMAP_P_SIZE / 2)),
     5,056 ( 0.00%)  				game->frame
         .           				);
         .           			j++;
         .           		}
         .           		i++;
         .           	}
       316 ( 0.00%)  }
         .           
         .           void	draw_npc(t_tile_context *tile, t_png_pixel8 color)
         .           {
         .           	int	i;
         .           	int	j;
         .           	int	x;
         .           	int	y;
         .           
-- line 101 ----------------------------------------

11,054,848 ( 0.02%)  <counts for unidentified lines in src/minimap/minimap_drawing.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/rendering/texture.c
--------------------------------------------------------------------------------
Ir                     

-- line 19 ----------------------------------------
            .           	int		buffer_idx;
            .           	int		tex_y;
            .           	float	tex_pos;
            .           	float	step;
            .           	int		y;
            .           
            .           	step = tex_ctx->texture->header.height / (float)tex_ctx->wall_height;
            .           	tex_pos = tex_ctx->texture->header.height \
   13,183,172 ( 0.02%)  	- ((tex_ctx->wall_end_actual - tex_ctx->wall_end) * step);
            .           	y = tex_ctx->wall_end + 1;
1,141,110,672 ( 2.13%)  	while (--y > tex_ctx->wall_start)
            .           	{
1,756,883,610 ( 3.28%)  		buffer_idx = y * ctx->render_ctx->render_width + ctx->column;
  858,888,576 ( 1.60%)  		tex_y = (int)(tex_pos - (tex_ctx->texture->header.height \
  237,074,877 ( 0.44%)  			* floorf(tex_pos / tex_ctx->texture->header.height)));
1,760,074,920 ( 3.29%)  		if (hit->dist < zbuf[buffer_idx])
            .           		{
  316,099,836 ( 0.59%)  			draw_pixel(
1,501,498,687 ( 2.81%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/drawing/draw_basics.c:draw_pixel (79,024,959x)
   79,024,959 ( 0.15%)  				tex_ctx->texture->pixels_8bit[tex_y \
  158,049,918 ( 0.30%)  				* tex_ctx->texture->header.width + tex_ctx->tex_x],
   79,024,959 ( 0.15%)  				ctx->column, y, ctx->render_ctx->frame);
  158,049,918 ( 0.30%)  			zbuf[buffer_idx] = hit->dist;
            .           		}
  350,419,329 ( 0.65%)  		tex_pos -= step;
            .           	}
            .           }
            .           
            .           void	manage_texture(t_raycast_hit *hit, t_raycast_context *ctx,
            .           			t_render_context *render, t_vertical_tex *tex_ctx)
   20,135,870 ( 0.04%)  {
            .           	uint8_t		*zbuf;
            .           	float		offset;
            .           
    4,027,174 ( 0.01%)  	zbuf = ctx->render_ctx->z_buffer;
   10,067,935 ( 0.02%)  	tex_ctx->texture = render->game->textures[hit->tile_info->texture];
    8,054,348 ( 0.02%)  	if (!hit->orientation)
            .           		offset = hit->pos.y - (int)hit->pos.y;
            .           	else
            .           		offset = hit->pos.x - (int)hit->pos.x;
   10,067,935 ( 0.02%)  	tex_ctx->tex_x = (int)(offset * tex_ctx->texture->header.width);
    7,507,286 ( 0.01%)  	if ((hit->orientation == 0 && hit->o_ray.dir_normal.x > 0) || \
    2,563,071 ( 0.00%)  		(hit->orientation == 1 && hit->o_ray.dir_normal.y < 0))
    3,553,767 ( 0.01%)  		tex_ctx->tex_x = tex_ctx->texture->header.width - tex_ctx->tex_x - 1;
            .           	render_texture(tex_ctx, hit, ctx, zbuf);
   16,108,696 ( 0.03%)  }
            .           
            .           void	render_horizontal_texture(t_ivec2 pixel, t_vec2 real_pos,
            .           			t_render_context *r_ctx, t_texture_type texture_type)
            .           {
            .           	t_png	*texture;
            .           	t_vec2	off;
            .           	t_ivec2	tex;
            .           	
   72,586,383 ( 0.14%)  	texture = r_ctx->textures[texture_type];
   96,781,844 ( 0.18%)  	off.x = real_pos.x - floor(real_pos.x);
  120,977,305 ( 0.23%)  	off.y = real_pos.y - floor(real_pos.y);
  169,368,227 ( 0.32%)  	tex.x = (int)(off.x * texture->header.width) % texture->header.width;
  145,172,766 ( 0.27%)  	tex.y = (int)(off.y * texture->header.height) % texture->header.height;
  217,759,149 ( 0.41%)  	draw_pixel(texture->pixels_8bit[tex.y * texture->header.width + tex.x], pixel.x, pixel.y, r_ctx->frame);
  459,713,759 ( 0.86%)  => /home/vdurand/Documents/PROJECTS/cub3d/src/drawing/draw_basics.c:draw_pixel (24,195,461x)
            .           }

  652,772,108 ( 1.22%)  <counts for unidentified lines in src/rendering/texture.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/drawing/draw_basics.c
--------------------------------------------------------------------------------
Ir                     

-- line 8 ----------------------------------------
            .           /*   Created: 2025/06/05 22:58:41 by vdurand           #+#    #+#             */
            .           /*   Updated: 2025/07/22 23:46:16 by vdurand          ###   ########.fr       */
            .           /*                                                                            */
            .           /* ************************************************************************** */
            .           
            .           #include "cub3d.h"
            .           
            .           void	draw_pixel(t_rgba8 src, unsigned int x, unsigned int y, t_img_data *img)
  544,208,582 ( 1.02%)  {
            .           	uint32_t	*pixel;
            .           	uint8_t		*bytes;
            .           	uint8_t		src_alpha;
            .           	uint8_t		inv_alpha;
            .           
2,561,394,393 ( 4.79%)  	pixel = (uint32_t *)(img->buffer + (y * img->size_line) + (x << 2));
3,415,192,524 ( 6.38%)  	if (src.a == 255)
3,896,768,726 ( 7.28%)  		*pixel = (src.a << 24) | (src.r << 16) | (src.g << 8) | src.b;
            .           	else
            .           	{
            .           		bytes = (uint8_t *)pixel;
            .           		src_alpha = src.a;
            .           		inv_alpha = 255 - src_alpha;
  979,785,751 ( 1.83%)  		bytes[0] = (src.b * src_alpha + bytes[0] * inv_alpha) >> 8;
  808,138,738 ( 1.51%)  		bytes[1] = (src.g * src_alpha + bytes[1] * inv_alpha) >> 8;
  808,138,738 ( 1.51%)  		bytes[2] = (src.r * src_alpha + bytes[2] * inv_alpha) >> 8;
  139,969,393 ( 0.26%)  		bytes[3] = 255;
            .           	}
  272,104,291 ( 0.51%)  }
            .           
            .           static inline void	transformed_draw(t_rgba8 color, t_draw_transform *tform,
            .           						t_vec2 *pos, t_img_data *img)
            .           {
            .           	t_rgba8		*dest;
            .           
            .           	dest = &tform->color;
            .           	if (dest->r != 255)
            .           		color.r = dest->r;
  581,693,840 ( 1.09%)  	if (dest->g != 255)
            .           		color.g = dest->g;
  581,693,840 ( 1.09%)  	if (dest->b != 255)
            .           		color.b = dest->b;
3,420,914,380 ( 6.39%)  	draw_pixel(color, tform->x + pos->x, tform->y + pos->y, img);
            .           }
            .           
            .           void	draw_sprite_sheet(t_draw_transform tform, size_t index,
            .           			t_sprite_sheet *spr, t_img_data *img)
       54,080 ( 0.00%)  {
            .           	t_vec2	step;
            .           	int		uv;
            .           	t_vec2	pos;
            .           	t_ivec2	uv_start;
            .           
       40,560 ( 0.00%)  	step.x = (float)spr->width / tform.width;
       27,040 ( 0.00%)  	step.y = (float)spr->height / tform.height;
            .           	pos = (t_vec2){0, 0};
       47,320 ( 0.00%)  	uv_start.x = (index % spr->sprite_per_line) * spr->width;
            .           	uv_start.y = (index / spr->sprite_per_line) * spr->height;
    2,308,280 ( 0.00%)  	while (pos.y < tform.height)
            .           	{
            .           		pos.x = 0;
1,165,120,320 ( 2.18%)  		while (pos.x < tform.width)
            .           		{
2,326,775,360 ( 4.35%)  			uv = (uv_start.x + (int)(pos.x * step.x)) + (uv_start.y
1,745,081,520 ( 3.26%)  					+ (int)(pos.y * step.y)) * spr->asset->header.width;
1,745,081,520 ( 3.26%)  			transformed_draw(spr->asset->pixels_8bit[uv], &tform, &pos, img);
  581,693,840 ( 1.09%)  			pos.x++;
            .           		}
      764,920 ( 0.00%)  		pos.y++;
            .           	}
       47,320 ( 0.00%)  }
            .           
            .           void	draw_texture(int x, int y, t_png *texture, t_img_data *img)
            .           {
            .           	int	xx;
            .           	int	max_x;
            .           	int	max_y;
            .           
            .           	max_x = texture->header.width + x;
-- line 85 ----------------------------------------

3,459,812,182 ( 6.47%)  <counts for unidentified lines in src/drawing/draw_basics.c>

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./math/../sysdeps/ieee754/dbl-64/s_sin.c

--------------------------------------------------------------------------------
Ir                      
--------------------------------------------------------------------------------
38,890,561,417 (72.67%)  events annotated

