--------------------------------------------------------------------------------
Profile data file 'callgrind.out' (creator: callgrind-3.18.1)
--------------------------------------------------------------------------------
I1 cache: 
D1 cache: 
LL cache: 
Timerange: Basic block 0 - 178988625
Trigger: Program termination
Profiled target:  ./cub3d maps/test.cub (PID 284678, part 1)
Events recorded:  Ir
Events shown:     Ir
Event sort order: Ir
Thresholds:       99
Include dirs:     
User annotated:   
Auto-annotation:  on

--------------------------------------------------------------------------------
Ir                   
--------------------------------------------------------------------------------
798,336,940 (100.0%)  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir                    file:function
--------------------------------------------------------------------------------
503,166,651 (63.03%)  src/drawing/draw_basics.c:draw_pixel [/home/vdurand/Documents/PROJECTS/cube3d/cub3d]
242,953,100 (30.43%)  src/rendering/render_draw_ray.c:render_draw_ray [/home/vdurand/Documents/PROJECTS/cube3d/cub3d]
 24,969,159 ( 3.13%)  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S:__memset_avx2_unaligned_erms [/usr/lib/x86_64-linux-gnu/libc.so.6]
 13,182,760 ( 1.65%)  src/rendering/raycast_dda.c:render_ray [/home/vdurand/Documents/PROJECTS/cube3d/cub3d]
  2,213,386 ( 0.28%)  src/tilemaps/tilemap_basics.c:tilemap_is_tile_valid [/home/vdurand/Documents/PROJECTS/cube3d/cub3d]
  1,624,140 ( 0.20%)  ???:0x000000000004c190 [/usr/lib/x86_64-linux-gnu/libX11.so.6.4.0]
  1,418,772 ( 0.18%)  src/minimap.c:draw_tile [/home/vdurand/Documents/PROJECTS/cube3d/cub3d]
  1,175,796 ( 0.15%)  src/minimap.c:draw_minimap [/home/vdurand/Documents/PROJECTS/cube3d/cub3d]

--------------------------------------------------------------------------------
-- Auto-annotated source: src/tilemaps/tilemap_basics.c
--------------------------------------------------------------------------------
Ir                 

-- line 10 ----------------------------------------
        .           /*                                                                            */
        .           /* ************************************************************************** */
        .           
        .           #include "cub3d.h"
        .           #include "tilemap.h"
        .           
        .           bool	tilemap_is_tile_valid(size_t x, size_t y, t_tilemap *map)
        .           {
1,982,210 ( 0.25%)  	return (x < map->width && y < map->height);
        .           }
        .           
        .           t_tile	*tilemap_get_tile(size_t x, size_t y, t_tilemap *map)
        .           {
  249,352 ( 0.03%)  	return (&map->tiles[y][x]);
        .           }
        .           
        .           bool	tilemap_collision(float x, float y, t_tilemap *tilemap)
        .           {
        .           	t_tile	*tile;
        .           
      120 ( 0.00%)  	if (!tilemap_is_tile_valid(x, y, tilemap))
        .           		return (true);
        .           	tile = tilemap_get_tile((size_t) x, (size_t)  y, tilemap);
       44 ( 0.00%)  	return (!tile->info.solid);
        .           }
        .           
        .           bool	tilemap_collision_bbox(float x_axis, float y_axis,
        .           			t_bbox bbox, t_tilemap *tilemap)
        .           {
        .           	bool	collide;
        .           
       12 ( 0.00%)  	collide = tilemap_collision(bbox.min.x + x_axis, bbox.min.y + y_axis, tilemap)
        8 ( 0.00%)  		&& tilemap_collision(bbox.max.x + x_axis, bbox.min.y + y_axis, tilemap)
        8 ( 0.00%)  		&& tilemap_collision(bbox.min.x + x_axis, bbox.max.y + y_axis, tilemap)
       12 ( 0.00%)  		&& tilemap_collision(bbox.max.x + x_axis, bbox.max.y + y_axis, tilemap);
        4 ( 0.00%)  	return (!collide);
        .           }

  231,232 ( 0.03%)  <counts for unidentified lines in src/tilemaps/tilemap_basics.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/rendering/render_draw_ray.c
--------------------------------------------------------------------------------
Ir                  

-- line 9 ----------------------------------------
         .           /*   Updated: 2025/06/13 19:52:53 by vdurand          ###   ########.fr       */
         .           /*                                                                            */
         .           /* ************************************************************************** */
         .           
         .           #include "cub3d.h"
         .           #include "cub3d_rendering.h"
         .           
         .           void	render_draw_ray(t_raycast_hit *actual, t_raycast_context *ctx, t_render_context *render)
   204,624 ( 0.03%)  {
         .           	float	corrected_dist;
         .           	int		wall_start;
         .           	int		wall_end;
         .           	int		y;
         .           
   159,152 ( 0.02%)  	corrected_dist = actual->dist * cosf(actual->original_angle - render->direction);
   477,440 ( 0.06%)  => ./math/../sysdeps/ieee754/flt-32/s_cosf.c:__cosf_fma (22,736x)
    90,944 ( 0.01%)  	float	y_floor  = ((actual->tile->floor  - render->eye_height)  / corrected_dist ) * render->proj_dist_y;
         .           	float	y_ceiling = ((actual->tile->ceiling - render->eye_height)  / corrected_dist ) * render->proj_dist_y;
   204,624 ( 0.03%)  	wall_start = clamp((int)(-y_ceiling + WINDOW_HEIGHT/2), 0, WINDOW_HEIGHT );
   119,076 ( 0.01%)  => ???:clamp (22,736x)
   272,832 ( 0.03%)  	wall_end = clamp((int)(-y_floor   + WINDOW_HEIGHT/2), 0, WINDOW_HEIGHT );
   136,416 ( 0.02%)  => ???:clamp (22,736x)
         .           	y = 0;
         .           	// printf("%i, %i, %i, %i\n", rgba8(0,0,0,255).a, rgba8(0,0,0,255).r,rgba8(0,0,0,255).g, rgba8(0,0,0,255).b);
         .           	// exit(0);
49,109,760 ( 6.15%)  	while (y < WINDOW_HEIGHT)
         .           	{
         .           
91,870,688 (11.51%)  		if (y > wall_start && y < wall_end)
38,129,118 ( 4.78%)  			draw_pixel(rgba8(255, 0, 0, 100),
495,678,534 (62.09%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/drawing/draw_basics.c:draw_pixel (12,709,706x)
25,419,412 ( 3.18%)  			ctx->column, y, render->frame);
24,554,880 ( 3.08%)  		y++;
         .           	}
   159,152 ( 0.02%)  }

12,777,914 ( 1.60%)  <counts for unidentified lines in src/rendering/render_draw_ray.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/rendering/raycast_dda.c
--------------------------------------------------------------------------------
Ir                 

-- line 17 ----------------------------------------
        .           static inline void	raycast_launch(t_raycast_context *ctx);
        .           static inline bool	check_wall_tile(t_raycast_hit *hit,
        .           		t_raycast_context *ctx);
        .           static inline void	raycast_set_dist(t_raycast_hit *hit,
        .           		t_raycast_context *ctx);
        .           
        .           void	render_ray(float base_angle, int column,
        .           		t_ray2 *ray, t_render_context *render_ctx)
   34,560 ( 0.00%)  {
        .           	t_raycast_context	ctx;
        .           
    3,840 ( 0.00%)  	ctx.column = column;
    3,840 ( 0.00%)  	ctx.render_ctx = render_ctx;
    3,840 ( 0.00%)  	ctx.ray = ray;
    7,680 ( 0.00%)  	ctx.tilemap = render_ctx->tilemap;
   15,360 ( 0.00%)  	ctx.step.x = sign(ray->dir_normal.x);
   34,560 ( 0.00%)  => ???:sign (3,840x)
   15,360 ( 0.00%)  	ctx.step.y = sign(ray->dir_normal.y);
   34,560 ( 0.00%)  => ???:sign (3,840x)
    7,680 ( 0.00%)  	ctx.buffer.n_hits = 0;
    3,840 ( 0.00%)  	ctx.actual = ctx.buffer.hits;
    3,840 ( 0.00%)  	ctx.last = NULL;
        .           	raycast_init(&ctx);
        .           	raycast_launch(&ctx);
   83,568 ( 0.01%)  	while (ctx.buffer.n_hits > 0)
        .           	{
   45,472 ( 0.01%)  		ctx.buffer.n_hits--;
   45,472 ( 0.01%)  		ctx.buffer.hits[ctx.buffer.n_hits].original_angle = base_angle;
   45,472 ( 0.01%)  		ctx.buffer.hits[ctx.buffer.n_hits].original_ray = *ray;
  136,416 ( 0.02%)  		render_draw_ray(ctx.buffer.hits + ctx.buffer.n_hits, &ctx, render_ctx);
739,364,566 (92.61%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/rendering/render_draw_ray.c:render_draw_ray (22,736x)
        .           	}
   26,880 ( 0.00%)  }
        .           
        .           static inline void	raycast_init(t_raycast_context *ctx)
        .           {
        .           	t_ray2	*ray;
        .           
        .           	ray = ctx->ray;
    7,680 ( 0.00%)  	ctx->actual_tile.x = (int)(ray->origin.x);
    7,680 ( 0.00%)  	ctx->actual_tile.y = (int)(ray->origin.y);
   19,200 ( 0.00%)  	if (float_equal(ray->dir_normal.x, 0))
   26,880 ( 0.00%)  => ???:float_equal (3,840x)
    3,840 ( 0.00%)  		ctx->delta_dist.x = INFINITY;
        .           	else
   11,520 ( 0.00%)  		ctx->delta_dist.x = fabs(1 / ray->dir_normal.x);
   23,040 ( 0.00%)  	if (float_equal(ray->dir_normal.y, 0))
   26,880 ( 0.00%)  => ???:float_equal (3,840x)
    3,840 ( 0.00%)  		ctx->delta_dist.y = INFINITY;
        .           	else
   11,520 ( 0.00%)  		ctx->delta_dist.y = fabs(1 / ray->dir_normal.y);
   11,520 ( 0.00%)  	if (ray->dir_normal.x < 0.0)
    7,680 ( 0.00%)  		ctx->step_dist.x = 
    7,680 ( 0.00%)  			(ray->origin.x - ctx->actual_tile.x) * ctx->delta_dist.x;
        .           	else
        .           		ctx->step_dist.x = 
   17,280 ( 0.00%)  			(ctx->actual_tile.x + 1.0 - ray->origin.x) *  ctx->delta_dist.x;
    7,680 ( 0.00%)  	if (ray->dir_normal.y < 0.0)
    7,680 ( 0.00%)  		ctx->step_dist.y = 
   15,360 ( 0.00%)  			(ray->origin.y - ctx->actual_tile.y) * ctx->delta_dist.y;
        .           	else
        .           		ctx->step_dist.y = 
        .           			(ctx->actual_tile.y + 1.0 - ray->origin.y) *  ctx->delta_dist.y;
        .           }
        .           
        .           static inline void	raycast_launch(t_raycast_context *ctx)
        .           {
2,456,130 ( 0.31%)  	while (fmin(ctx->step_dist.x, ctx->step_dist.y) < RENDER_DISTANCE)
        .           	{
  977,844 ( 0.12%)  		if (ctx->step_dist.x < ctx->step_dist.y)
        .           		{
  279,520 ( 0.04%)  			ctx->step_dist.x += ctx->delta_dist.x;
  419,280 ( 0.05%)  			ctx->actual_tile.x += ctx->step.x;
  279,520 ( 0.04%)  			ctx->actual->orientation = 0;
        .           		}
        .           		else
        .           		{
  698,324 ( 0.09%)  			ctx->step_dist.y += ctx->delta_dist.y;
1,047,486 ( 0.13%)  			ctx->actual_tile.y += ctx->step.y;
  698,324 ( 0.09%)  			ctx->actual->orientation = 1;
        .           		}
   49,864 ( 0.01%)  		if (check_wall_tile(ctx->actual, ctx))
        .           		{
   22,736 ( 0.00%)  			raycast_set_dist(ctx->actual, ctx);
   45,472 ( 0.01%)  			ctx->last = ctx->actual;
  113,680 ( 0.01%)  			if (ctx->buffer.n_hits++ < MAX_HITS)
  113,680 ( 0.01%)  				ctx->actual = ctx->buffer.hits + ctx->buffer.n_hits;
        .           		}
        .           	}
        .           }
        .           
        .           static inline bool	check_wall_tile(t_raycast_hit *hit,
        .           		t_raycast_context *ctx)
        .           {
        .           	t_tile	*tile;
        .           	int		tile_x;
        .           	int		tile_y;
        .           
  349,162 ( 0.04%)  	tile_x = ctx->actual_tile.x;
  279,520 ( 0.04%)  	tile_y = ctx->actual_tile.y;
3,911,376 ( 0.49%)  	if (!tilemap_is_tile_valid(tile_x, tile_y, ctx->tilemap))
2,213,386 ( 0.28%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/tilemaps/tilemap_basics.c:tilemap_is_tile_valid (488,922x)
        .           		return (false);
  199,456 ( 0.02%)  	tile = tilemap_get_tile(tile_x, tile_y, ctx->tilemap);
  249,320 ( 0.03%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/tilemaps/tilemap_basics.c:tilemap_get_tile (49,864x)
   99,728 ( 0.01%)  	hit->tile_info = &tile->info;
   49,864 ( 0.01%)  	hit->tile = tile;
   49,864 ( 0.01%)  	if (hit->tile_info->wall)
        .           		return (true);
        .           	return (false);
        .           }
        .           
        .           static inline void	raycast_set_dist(t_raycast_hit *hit,
        .           		t_raycast_context *ctx)
        .           {
   45,472 ( 0.01%)  	if (hit->orientation == 0)
   63,144 ( 0.01%)  		hit->dist = (ctx->actual_tile.x - ctx->ray->origin.x
   50,510 ( 0.01%)  			+ (1 - ctx->step.x) * 0.5) / ctx->ray->dir_normal.x;
        .           	else
   50,536 ( 0.01%)  		hit->dist = (ctx->actual_tile.y - ctx->ray->origin.y
   75,804 ( 0.01%)  			+ (1 - ctx->step.y) * 0.5) / ctx->ray->dir_normal.y;
        .           }

  110,144 ( 0.01%)  <counts for unidentified lines in src/rendering/raycast_dda.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/drawing/draw_basics.c
--------------------------------------------------------------------------------
Ir                   

-- line 14 ----------------------------------------
          .           
          .           static inline void	set_pixel(t_png_pixel8 src,
          .           		uint8_t *bytes, t_img_data *img)
          .           {
          .           	uint32_t	src_alpha;
          .           	uint32_t	inv_alpha;
          .           
          .           	src_alpha = src.a;
 25,803,418 ( 3.23%)  	inv_alpha = 255 - src_alpha;
 25,803,418 ( 3.23%)  	if (img->endian == 1)
          .           	{
          .           		bytes[0] = 255;
          .           		bytes[1] = (src.r * src_alpha + bytes[1] * inv_alpha + 128) >> 8;
          .           		bytes[2] = (src.g * src_alpha + bytes[2] * inv_alpha + 128) >> 8;
          .           		bytes[3] = (src.b * src_alpha + bytes[3] * inv_alpha + 128) >> 8;
          .           	}
          .           	else
          .           	{
 77,410,254 ( 9.70%)  		bytes[0] = (src.b * src_alpha + bytes[0] * inv_alpha + 128) >> 8;
 90,311,963 (11.31%)  		bytes[1] = (src.g * src_alpha + bytes[1] * inv_alpha + 128) >> 8;
 90,311,963 (11.31%)  		bytes[2] = (src.r * src_alpha + bytes[2] * inv_alpha + 128) >> 8;
 12,901,709 ( 1.62%)  		bytes[3] = 255;
          .           	}
          .           }
          .           
          .           void	draw_pixel(t_rgba8 src, unsigned int x, unsigned int y, t_img_data *img)
          .           {
          .           	uint32_t	*pixel;
          .           
          .           	pixel = (uint32_t *)(img->buffer + (y * img->size_line) + (x << 2));
 51,606,836 ( 6.46%)  	if (src.a == 255)
          .           	{
          .           		*pixel = (src.a << 24) | (src.r << 16) | (src.g << 8) | src.b;
          .           		return ;
          .           	}
          .           	if (src.a != 0)
          .           		set_pixel(src, (uint8_t *)pixel, img);
 12,901,709 ( 1.62%)  }

116,115,381 (14.54%)  <counts for unidentified lines in src/drawing/draw_basics.c>

--------------------------------------------------------------------------------
-- Auto-annotated source: src/minimap.c
--------------------------------------------------------------------------------
Ir               

-- line 8 ----------------------------------------
      .           /*   Created: 2025/06/02 09:58:29 by halnuma           #+#    #+#             */
      .           /*   Updated: 2025/06/13 00:20:53 by vdurand          ###   ########.fr       */
      .           /*                                                                            */
      .           /* ************************************************************************** */
      .           
      .           #include "cub3d.h"
      .           
      .           void	draw_tile(t_game *game, int pos_x, int pos_y, int off_x, int off_y, t_png_pixel8 color)
 25,344 ( 0.00%)  {
      .           	int	i;
      .           	int	j;
      .           	int	x;
      .           	int	y;
      .           
      .           	i = 0;
 72,192 ( 0.01%)  	while (i < MAP_TILE_SIZE)
      .           	{
      .           		j = 0;
 12,288 ( 0.00%)  		while (j < MAP_TILE_SIZE)
      .           		{
      .           			x = (pos_x * MAP_TILE_SIZE + i - off_x + MINIMAP_X_START + MINIMAP_BORDER);
      .           			y = (pos_y * MAP_TILE_SIZE + j - off_y + MINIMAP_Y_START + MINIMAP_BORDER);
187,392 ( 0.02%)  			if (x >= MINIMAP_X_START + MINIMAP_BORDER && \
      .           				x < MINIMAP_X_START + MINIMAP_SIZE && \
      .           				y >= MINIMAP_Y_START + MINIMAP_BORDER && \
      .           				y < MINIMAP_Y_START + MINIMAP_SIZE)
893,040 ( 0.11%)  				draw_pixel(color, x, y, game->img);
6,965,712 ( 0.87%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/drawing/draw_basics.c:draw_pixel (178,608x)
      .           			j++;
      .           		}
      .           		i++;
      .           	}
  6,144 ( 0.00%)  }
      .           
      .           int	calculate_offset(double g_pos)
      .           {
      .           	int		offset;
      .           	double	diff;
      .           
    336 ( 0.00%)  	diff = g_pos - (int)g_pos;
    192 ( 0.00%)  	offset = (int)(MAP_TILE_SIZE * diff);
      .           	return (offset);
      .           }
      .           
      .           void	draw_line(char *line, t_game *game, double pos_y)
    384 ( 0.00%)  {
      .           	int		tile;
      .           	int		pos_x;
      .           	int		off_x;
      .           	int		off_y;
      .           
     96 ( 0.00%)  	off_x = calculate_offset(game->player.position.x);
     96 ( 0.00%)  	off_y = calculate_offset(game->player.position.y);
     48 ( 0.00%)  	tile = (int)game->player.position.x - 7;
      .           	pos_x = 0;
    144 ( 0.00%)  	while (tile < 0)
      .           	{
      .           		draw_tile(game, pos_x, pos_y, off_x, off_y, rgba8(0, 0, 0, 200));
      .           		tile++;
      .           		pos_x++;
      .           	}
     96 ( 0.00%)  	if (!line)
      .           	{
  1,032 ( 0.00%)  		while (tile < (int)game->player.position.x + 9)
      .           		{
  1,344 ( 0.00%)  			draw_tile(game, pos_x, pos_y, off_x, off_y, rgba8(0, 0, 0, 200));
2,063,364 ( 0.26%)  => src/minimap.c:draw_tile (192x)
      .           			tile++;
    192 ( 0.00%)  			pos_x++;
      .           		}
      .           		return ;
      .           	}
  5,508 ( 0.00%)  	while (line[tile] && tile < (int)game->player.position.x + 9)
      .           	{
  2,304 ( 0.00%)  		if (center_tile(line[tile]))
  5,421 ( 0.00%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/parsing.c:center_tile (576x)
  2,079 ( 0.00%)  			draw_tile(game, pos_x, pos_y, off_x, off_y, rgba8(255, 150, 100, 200));
3,181,335 ( 0.40%)  => src/minimap.c:draw_tile (297x)
  1,728 ( 0.00%)  		if (line[tile] == '1')
  1,848 ( 0.00%)  			draw_tile(game, pos_x, pos_y, off_x, off_y, rgba8(200, 10, 40, 200));
2,960,160 ( 0.37%)  => src/minimap.c:draw_tile (264x)
  3,099 ( 0.00%)  		if (line[tile] == ' ' || line[tile] == '\n')
    105 ( 0.00%)  			draw_tile(game, pos_x, pos_y, off_x, off_y, rgba8(0, 0, 0, 200));
179,625 ( 0.02%)  => src/minimap.c:draw_tile (15x)
    576 ( 0.00%)  		tile++;
    576 ( 0.00%)  		pos_x++;
      .           	}
    144 ( 0.00%)  	while (tile < (int)game->player.position.x + 9)
      .           	{
      .           		draw_tile(game, pos_x, pos_y, off_x, off_y, rgba8(0, 0, 0, 200));
      .           		tile++;
      .           		pos_x++;
      .           	}
    384 ( 0.00%)  }
      .           
      .           void	draw_border(t_game *game)
      .           {
      .           	int				i;
      .           	int				j;
      .           	t_png_pixel8	color;
      .           
      .           	color = rgba8(25, 255, 25, 200);
      .           	i = 0;
  1,494 ( 0.00%)  	while (i < MINIMAP_SIZE)
      .           	{
      .           		j = 0;
558,783 ( 0.07%)  		while (j < MINIMAP_SIZE)
      .           		{
537,840 ( 0.07%)  			if (j < MINIMAP_BORDER || \
      .           				j > MINIMAP_SIZE - MINIMAP_BORDER || \
      .           				i < MINIMAP_BORDER || \
      .           				i > MINIMAP_SIZE - MINIMAP_BORDER)
      .           			{
 66,015 ( 0.01%)  				draw_pixel(color, i + MINIMAP_X_START, j + MINIMAP_Y_START, game->img);
514,917 ( 0.06%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/drawing/draw_basics.c:draw_pixel (13,203x)
      .           			}
      .           			j++;
      .           		}
    747 ( 0.00%)  		i++;
      .           	}
      .           }
      .           
      .           void	draw_player(t_game *game)
     18 ( 0.00%)  {
      .           	int	i;
      .           	int	j;
      .           
      .           	i = 0;
     72 ( 0.00%)  	while (i < MINIMAP_P_SIZE)
      .           	{
      .           		j = 0;
      .           		while (j < MINIMAP_P_SIZE)
      .           		{
    768 ( 0.00%)  			draw_pixel(
  7,488 ( 0.00%)  => /home/vdurand/Documents/PROJECTS/cube3d/src/drawing/draw_basics.c:draw_pixel (192x)
      .           				rgba8(255, 0, 10, 200),
      .           				((7 * MAP_TILE_SIZE) + i + MINIMAP_X_START + MINIMAP_BORDER - (MINIMAP_P_SIZE / 2)),
      .           				((7 * MAP_TILE_SIZE) + j + MINIMAP_Y_START + MINIMAP_BORDER - (MINIMAP_P_SIZE / 2)),
    192 ( 0.00%)  				game->img
      .           				);
      .           			j++;
      .           		}
      .           		i++;
      .           	}
     12 ( 0.00%)  }
      .           
      .           void	draw_minimap(t_game *game)
     21 ( 0.00%)  {
      .           	int		i;
      .           	int		line;
      .           
      .           	i = 0;
      6 ( 0.00%)  	line = (int)game->player.position.y - 7;
      6 ( 0.00%)  	while (line < 0)
      .           	{
      .           		draw_line(NULL, game, i);
      .           		line++;
      .           		i++;
      .           	}
    342 ( 0.00%)  	while (game->map[line] && line < (int)game->player.position.y + 9)
      .           	{
    108 ( 0.00%)  		draw_line(game->map[line], game, i);
6,346,983 ( 0.80%)  => src/minimap.c:draw_line (36x)
     36 ( 0.00%)  		line++;
     36 ( 0.00%)  		i++;
      .           	}
     78 ( 0.00%)  	while (line < (int)game->player.position.y + 9)
      .           	{
     48 ( 0.00%)  		draw_line(NULL, game, i);
2,066,448 ( 0.26%)  => src/minimap.c:draw_line (12x)
      .           		line++;
     12 ( 0.00%)  		i++;
      .           	}
      .           	draw_border(game);
     24 ( 0.00%)  	draw_player(game);
  8,550 ( 0.00%)  => src/minimap.c:draw_player (3x)
      .           }

233,787 ( 0.03%)  <counts for unidentified lines in src/minimap.c>

--------------------------------------------------------------------------------
The following files chosen for auto-annotation could not be found:
--------------------------------------------------------------------------------
  ./string/../sysdeps/x86_64/multiarch/memset-vec-unaligned-erms.S

--------------------------------------------------------------------------------
Ir                   
--------------------------------------------------------------------------------
634,916,211 (79.53%)  events annotated

